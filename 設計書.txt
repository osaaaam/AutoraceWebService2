■画面
toppage.html
raceinfo.html
anaylize.html


■フォルダ構成
AutoraceWebService
    view
        ○○.html
            css
                ○○.css
            js
                ○○.js
    lambda
        function
            api
                get_raceinfo.py（レース情報取得）
                get_anaylize.py（分析結果取得）
                get_place.py（本日の開催場取得）
                get_rds_status.py（RDSの状態取得）
                change_rds_status.py（RDSの起動停止）
            batch
                monthly-1.py（処理対象取得）
                monthly-2.py（レース情報取り込み）
                daily-1.py（RDS停止）
            module（自作モジュール置き場）
                dbaccess.py（DBアクセス）
                scraping.py（スクレイピング）
                anaylize.py（分析）
                message.py（メッセージ）
                sql.py（SQL）
                awsmanagement.py（AWS管理系）
            packages（外部モジュール置き場）
                psycopg2
                bs4
                requests
        layer（linux環境でビルドしないといけないライブラリ）
            sklearn
            pandas
            numpy
            scipy


■API構成
raceinfo
    └ get（get_raceinfo.py）
anaylize
    └ get（get_anaylize.py）
common
    place
        └ get（get_place.py）
    rds
        └ get（get_rds_status.py）
        └ post（change_rds_status.py）


■テーブル一覧
マスタ
・m_convert（変換）
・m_anaylize_model（分析モデル）
トラン
・t_race_head（レースヘッダ）
・t_race_info（レース情報）
・t_race_result（レース結果）
・t_race_payoff（払い戻し）
・t_monthly_log（月次処理ログ）
ワーク
・w_race_head（レースヘッダ）
・w_race_info（レース情報）
・w_anaylize_result_rank（予測順位）
・w_anaylize_result_value（予測値）
・w_place（開催レース場）
作りたい（横視点データ）
・t_hande
・t_racer
・t_represent
・t_trialrun
・t_deviation
・t_position_x
・t_position_y
・t_racetime
・t_starttime
